/*! angular-ui-list-input 12-03-2014 */
angular.module("ui.listInput",[]).directive("uiListInput",["$rootScope","$parse","$timeout",function(a,b,c){"use strict";function d(a,b){var c,d=[],e=[];if(angular.isArray(a))for(var f=0;f<a.length;f++)c=a[f],!c&&!angular.isNumber(c)||angular.equals(c,b)?e.push(f):d.push(angular.copy(c));return{list:d,removedIndices:e}}function e(a,b){var c=d(a,b);return c.list}function f(a,f,g){function h(b){b=angular.copy(b);var c=angular.copy(b);b&&!angular.equals(b[b.length-1],k)&&b.push(angular.copy(k)),c&&angular.equals(c[c.length-1],k)&&c.pop(),angular.equals(a.items,b)||(a.items=b),j.assign(i,c)}var i=a.$parent,j=b(g.ngModel),k=a.$eval(g.placeholderValue),l=-1;k||(k=""),i.$watch(g.ngModel,function(b){b&&!angular.equals(a.items.slice(0,a.items.length-1),b)&&h(e(b,k))},!0),a.$watch("items",function(a){h(a),"customFields"in g||c(function(){var a=f.find("input");angular.forEach(a,function(b,c){b=angular.element(b);var d=b.controller("ngModel");if(c===a.length-1){b.parent().removeClass("has-error");for(var e in d.$error)d.$setValidity(e,!0)}else d.$invalid?b.parent().addClass("has-error"):b.parent().removeClass("has-error")})})},!0),h(e(a.$eval(g.ngModel),k)),a.updateItems=function(){c(function(){var b=d(a.items,k);if("customFields"in g)h(b.list);else{for(var c,e=a.indexOfFocusedField(),f=e,i=b.removedIndices,j=0;j<i.length&&(c=i[j],e>c);j++)f--;h(b.list),f>=0&&f!=e&&a.focusFieldAtIndex(f)}})},a.removeItemAtIndex=function(b){if(b>=0&&b<a.items.length){var c=angular.copy(a.items);c.splice(b,1),h(c),l>=0&&(l===b?a.focusFieldAtIndex(a.items.length-1):(a.focusFieldAtIndex(b>l?l:l-1),l=-1))}},a.focusFieldAtIndex=function(b,c){if(b>=0){var d=f.find("input");b<d.length?d[b].focus():c||setTimeout(function(){a.focusFieldAtIndex(b,!0)},50)}},a.indexOfFocusedField=function(){for(var a=document.activeElement,b=f.find("input"),c=0;c<b.length;c++)if(b[c]===a)return c;return-1},a.didBlurFieldAtIndex=function(a){l=a,c(function(){l===a&&(l=-1)},50)}}function g(b,c,d){return d(a.$new(!0),function(a){var d=angular.element("<div></div>").append(a),e=d.find("input");if("customFields"in c){var f=b.find("ng-form");f.empty().append(d.contents()),f.children().removeAttr("ng-non-bindable"),f.removeAttr("ng-class"),e.eq(e.length-1).attr("ng-blur","updateItems()")}else 0===e.length&&(e=angular.element('<input name="listItem" type="text" class="form-control" />')),e.attr("name","listItem"),e.attr("ng-model","items[$index]"),b.find("input").replaceWith(e),e.attr("ng-blur","didBlurFieldAtIndex($index);updateItems()")}),f}return{restrict:"ACE",require:"ngModel",transclude:!0,scope:!0,templateUrl:"list-input.tpl.html",compile:g}}]).directive("removeItemButton",function(){return{restrict:"ACE",templateUrl:"remove-item-button.tpl.html",replace:!0}}),angular.module("ui.listInput").run(["$templateCache",function(a){"use strict";a.put("list-input.tpl.html",'<div class="list-input">\n	<div ng-repeat="doNotUse in items track by $index" class="list-input-item"> \n		<ng-form name="list-input-item" ng-class="{\'input-group\': !$last}">\n			<input />\n			<div remove-item-button></div>\n		</ng-form>\n	</div>\n</div>'),a.put("remove-item-button.tpl.html",'<div class="input-group-addon btn" ng-click="removeItemAtIndex($index)" ng-show="!$last">\n	<span class="glyphicon glyphicon-remove"></span>\n</div>')}]);